name: Feature branch pipeline

on:
  push:
    branches:
      - add-github-actions-practice
      
jobs:
  check-editorconfig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  run-linters:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.13

      - name: Install Python dependencies
        run: | 
          python -m pip install --upgrade pip
          pip install black pylint
          pip install -r app/requirements.txt

      - name: Run linters
        run: pylint -d C0114,C0115,C0116 $(git ls-files '*.py')

  check-markdown:
    runs-on: ubuntu-latest
    steps:
      - name: Markdownlint 
        uses: nosborn/github-action-markdown-cli@v3.3.0
        with:
          files: .md
          config_file: .markdownlint.json

  run-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.13

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r app/requirements.txt

      - name: Test with pytest
        run: pytest app/app_test.py

  scan-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=anisarambelieva
          -Dsonar.projectKey=anisarambelieva_devops-programme

  # snyk:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v3
      
  #     - name: Install dependencies
  #       run: |
  #         cd app
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt

  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/python@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          tags: '${{ secrets.DOCKERHUB_USERNAME }}/python-app:${{ github.sha }}'
          load: true
      
      - name: Run Trivy vulnerability scanner
        id: trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/python-app:${{ github.sha }}'
          severity: 'CRITICAL,HIGH'

      - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Push Docker image
        if: success() && steps.trivy.outputs.exit-code == 0
        run: |
          docker push '${{ secrets.DOCKERHUB_USERNAME }}/python-app:${{ github.sha }}'
